/**
 * HA mobile_app
 * This is the OpenAPI specification of the mobile_app api of HA
 *
 * OpenAPI spec version: 1.0.0
 * Contact: cbro@semperpax.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.WebhookData;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Webhook {
  
  public enum TypeEnum {
     update_location,  call_service,  render_template,  fire_event,  update_registration,  get_zones,  get_config,  register_sensor,  update_sensor_states, 
  };
  @SerializedName("type")
  private TypeEnum type = null;
  @SerializedName("data")
  private WebhookData data = null;

  /**
   * Update topic
   **/
  @ApiModelProperty(required = true, value = "Update topic")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public WebhookData getData() {
    return data;
  }
  public void setData(WebhookData data) {
    this.data = data;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Webhook webhook = (Webhook) o;
    return (this.type == null ? webhook.type == null : this.type.equals(webhook.type)) &&
        (this.data == null ? webhook.data == null : this.data.equals(webhook.data));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.data == null ? 0: this.data.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Webhook {\n");
    
    sb.append("  type: ").append(type).append("\n");
    sb.append("  data: ").append(data).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
